<?php

/**
 * @file
 * SOCIAL module
 *
 * Dirt simple icons/links for social networks. Block for footer.
 */

/**
 * hook_perm
 * - manage social links
 */
function social_permission() {
	return array(
		'manage social links' => array('title' => 'This user can manage social networks'),
	);
}

/**
 * hook_menu
 */
function social_menu() {
    $items = array();

    $items['admin/config/social'] = array(
        'title' => 'Social',
        'description' => 'Social networks.',
        'position' => 'right',
        'weight' => 0,
        'page callback' => 'system_admin_menu_block_page',
        'access arguments' => array('manage social links'),
        'file' => 'system.admin.inc',
        'file path' => drupal_get_path('module', 'system'),
    );

    $items['admin/config/social/networks'] = array(
        'title' => 'Manage social networks',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('social_list'),
        'access callback' => 'user_access',
        'access arguments' => array('manage social links'),
        'type' => MENU_NORMAL_ITEM
    );

    return $items;
}


/**
 * What networks do we support?
 *
 * You can add whatever you like here. The form (and block) will update automatically.
 * The only thing worth noting is that the $networks key should be websafe and one word.
 * Such as "googleplus" not "Google+" or "Google Plus"
 */
function social_networks() {
    $networks = array();

    global $base_url;

    // FACEBOOK
    $n = array(
        'name' => 'Facebook',
        'abbr' => 'fb',
    );
    $networks['facebook'] = $n;

    // TWITTER
    $n = array(
        'name' => 'Twitter',
        'abbr' => 'tw',
    );
    $networks['twitter'] = $n;

    // YOUTUBE
    $n = array(
        'name' => 'YouTube',
        'abbr' => 'fb',
    );
    $networks['youtube'] = $n;

    return $networks;
}

/**
 * List social networks
 */
function social_list() {
    $form = array();

    global $base_url;
    $icon_path = variable_get('social_icon_path', $base_url . '/' . drupal_get_path('module', 'social') . '/icons/');
    $icon_size = variable_get('social_icon_size', 32);

    $networks = social_networks();
    foreach ($networks as $ntitle => $ninfo) {
        $form[$ntitle] = array(
            '#type' => 'fieldset',
            '#title' => $ninfo['name']
        );
        $form[$ntitle][$ntitle . '_icon'] = array(
            '#markup' => '<img src="' . $icon_path . $ntitle . '.png" alt="' . $ninfo['name'] . '" width="' . $icon_size . '" height="' . $icon_size . '" />',
            '#prefix' => '<div class="form-item" style="float: left; margin: 5px 10px;">',
            '#suffix' => '</div>'
        );
        $form[$ntitle][$ntitle . '_url'] = array(
            '#type' => 'textfield',
            '#title' => 'URL',
            '#default_value' => variable_get('social_' . $ntitle . '_url', 'http://'),
            '#description' => 'If you leave this empty, no icon will be displayed.'
        );
    }

    $form['icon_path'] = array(
        '#type' => 'textfield',
        '#title' => 'Icon path',
        '#default_value' => variable_get('social_icon_path', $base_url . '/' . drupal_get_path('module', 'social') . '/icons/'),
        '#description' => 'If you want to override the default icons.'
    );

    $form['icon_size'] = array(
        '#type' => 'textfield',
        '#title' => 'Icon size',
        '#default_value' => variable_get('social_icon_size', 32),
        '#description' => 'Number of pixels for both height and width'
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Save'
    );


    return $form;
}


/**
 * hook_submit
 * Updating URLs
 */
function social_list_submit($form, &$form_state) {

    $networks = social_networks();
    foreach ($networks as $ntitle => $ninfo) {
        $url = $form_state['values'][$ntitle . '_url'];
        variable_set('social_' . $ntitle . '_url', $url);
    }

    global $base_url;
    $icon_path = trim(strip_tags($form_state['values']['icon_path']));
    if ($icon_path == '') $icon_path = $base_url . '/' . drupal_get_path('module', 'social') . '/icons/';
    variable_set('social_icon_path', $icon_path);

    $icon_size = (int)trim(strip_tags($form_state['values']['icon_size']));
    if ($icon_size == 0) $icon_size = 32;
    variable_set('social_icon_size', $icon_size);

    drupal_set_message('Social networks updated!');

}


/**
 * Implements hook_block_info().
 */
function social_block_info() {
  $blocks['social'] = array(
    'info' => t('Social Networks'),
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function social_block_view($delta = '') {
    if ($delta =='social') {

        global $base_url;
        
        $icon_path = variable_get('social_icon_path', $base_url . '/' . drupal_get_path('module', 'social') . '/icons/');
        $icon_size = variable_get('social_icon_size', 32);

        $items = array();

        $networks = social_networks();
        foreach ($networks as $ntitle => $ninfo) {
            $url = variable_get('social_' . $ntitle . '_url', 'http://');
            if ($url == 'http://' || $url == '') continue;

            $o  = '<a class="social_link" href="' . $url . '">';
            $o .= '<img src="' . $icon_path . $ntitle . '.png" alt="' . $ninfo['name'] . '" width="' . $icon_size . '" height="' . $icon_size . '" />';
            $o .= '</a>';
            $items[] = $o;
        }

        if (count($items) > 0) $block['content'] = theme('item_list', array('items' => $items));

    } // end if

    return $block;
}

